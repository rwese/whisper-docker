name: Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          ghcr.io/${{ github.repository }}:latest
        cache-from: |
          type=gha
          type=registry,ref=ghcr.io/${{ github.repository }}:cache
        cache-to: |
          type=gha,mode=max
          type=registry,ref=ghcr.io/${{ github.repository }}:cache,mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        target: final

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## üöÄ Whisper CLI ${{ steps.version.outputs.version }}

          Docker images are now available for multiple architectures:

          ### üê≥ Docker Usage
          ```bash
          # Pull the latest image
          docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}

          # Use directly with audio files
          cat audio.m4a | docker run --rm -i ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}

          # With language detection
          cat meeting_en.m4a | docker run --rm -i ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          ```

          ### üì¶ Supported Architectures
          - `linux/amd64` - Intel/AMD 64-bit
          - `linux/arm64` - ARM 64-bit (Apple Silicon, ARM servers)

          ### ‚ú® Features
          - True streaming transcription with faster-whisper
          - Automatic language detection from filename patterns
          - Support for multiple output formats (txt, json, srt, vtt, tsv)
          - German and English optimized by default
          - Cache-friendly model storage

          ### üîß Installation

          **Using the wrapper script (recommended):**
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd whisper-docker
          ./transcribe audio.m4a
          ```

          **Direct Docker usage:**
          ```bash
          cat audio.m4a | docker run --rm -i ghcr.io/${{ github.repository }}:${{ steps.version.outputs.version }}
          ```
        draft: false
        prerelease: false
