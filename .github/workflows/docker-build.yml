name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
            docker-platform: linux/amd64
          - platform: linux/arm64
            runner: ubuntu-24.04-arm
            docker-platform: linux/arm64
          - platform: windows/amd64
            runner: windows-latest
            docker-platform: windows/amd64
    
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx (Linux)
      if: startsWith(matrix.platform, 'linux')
      uses: docker/setup-buildx-action@v3
      with:
        driver-opts: |
          network=host
    
    - name: Set up Docker (Windows)
      if: startsWith(matrix.platform, 'windows')
      shell: powershell
      run: |
        # Enable experimental features for Windows containers
        $config = @{
          "experimental" = $true
          "features" = @{
            "buildkit" = $true
          }
        }
        $config | ConvertTo-Json | Out-File -FilePath "$env:ProgramData\docker\config\daemon.json" -Encoding UTF8
        Restart-Service docker
    
    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch,suffix=-${{ matrix.platform }}
          type=ref,event=pr,suffix=-${{ matrix.platform }}
          type=semver,pattern={{version}},suffix=-${{ matrix.platform }}
          type=semver,pattern={{major}}.{{minor}},suffix=-${{ matrix.platform }}
          type=semver,pattern={{major}},suffix=-${{ matrix.platform }}
          type=raw,value=latest-${{ matrix.platform }},enable={{is_default_branch}}
        flavor: |
          latest=false
    
    - name: Build and push Docker image (Linux)
      if: startsWith(matrix.platform, 'linux')
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: ${{ matrix.docker-platform }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: |
          type=gha,scope=${{ matrix.platform }}
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.platform }}
        cache-to: |
          type=gha,mode=max,scope=${{ matrix.platform }}
          type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:cache-${{ matrix.platform }},mode=max
        build-args: |
          BUILDKIT_INLINE_CACHE=1
        target: final
    
    - name: Build and push Docker image (Windows)
      if: startsWith(matrix.platform, 'windows')
      shell: powershell
      run: |
        # Build Windows container with specific base image
        $tags = "${{ steps.meta.outputs.tags }}" -split "`n"
        $tagArgs = $tags | ForEach-Object { "--tag", $_ }
        
        docker build --platform ${{ matrix.docker-platform }} `
          --file Dockerfile.windows `
          $tagArgs `
          --build-arg BUILDKIT_INLINE_CACHE=1 `
          .
        
        if ($LASTEXITCODE -eq 0 -and "${{ github.event_name }}" -ne "pull_request") {
          foreach ($tag in $tags) {
            docker push $tag
          }
        }

  create-manifest:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Create and push multi-arch manifest
      run: |
        # Extract base tag without platform suffix
        BASE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # Create latest manifest
          docker manifest create ${BASE_TAG}:latest \
            ${BASE_TAG}:latest-linux/amd64 \
            ${BASE_TAG}:latest-linux/arm64 \
            ${BASE_TAG}:latest-windows/amd64
          docker manifest push ${BASE_TAG}:latest
        fi
        
        # Create branch/tag specific manifests
        if [[ "${{ github.ref_type }}" == "branch" ]]; then
          BRANCH_NAME=$(echo ${{ github.ref_name }} | tr '/' '-')
          docker manifest create ${BASE_TAG}:${BRANCH_NAME} \
            ${BASE_TAG}:${BRANCH_NAME}-linux/amd64 \
            ${BASE_TAG}:${BRANCH_NAME}-linux/arm64 \
            ${BASE_TAG}:${BRANCH_NAME}-windows/amd64
          docker manifest push ${BASE_TAG}:${BRANCH_NAME}
        fi